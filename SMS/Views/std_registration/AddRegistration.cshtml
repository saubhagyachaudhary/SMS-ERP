@model SMS.Models.std_registration

@{
    ViewBag.Title = "AddRegistration";
}


<div class="right_col" role="main">
    <h2>Add Registration</h2>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                           
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                          

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_first_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_first_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_first_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_last_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_last_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_last_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_father_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_father_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_father_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_mother_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_mother_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_mother_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_district, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_district, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_district, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_state, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_state, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_state, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_country, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_pincode, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_pincode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_email, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_class_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.DropDownList("std_class_id", ViewData["class_id"] as IEnumerable<SelectListItem>, "Select Class", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.std_class_id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.fees_amount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                   @Html.EditorFor(model => model.fees_amount, new { htmlAttributes = new { @disabled = "disable",@id = "fees",@class = "form-control" } })
                                    @Html.HiddenFor(model => model.fees_amount)
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                    <input type="submit" value="Register" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "AllRegistrationList", new { area = "" }, new { @class = "btn btn-primary please_wait" })
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

                    @section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            //Dropdownlist Selectedchange event

            $("#std_class_id").change(function () {



                $.ajax({

                    type: 'POST',

                    url: '@Url.Action("GetFees")', dataType: 'json', data: { id: $("#std_class_id").val() }, success: function (fees) {
                        $("#fees").val(fees);
                        $("#fees_amount").val(fees);
                    }


                });



            });

            return false;

        });

                          


</script>
                        @Scripts.Render("~/bundles/jqueryval")
                    }
