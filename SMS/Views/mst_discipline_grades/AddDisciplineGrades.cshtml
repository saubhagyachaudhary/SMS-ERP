@model SMS.Models.mst_discipline_grades

@{
    ViewBag.Title = "AddDisciplineGrades";

}


<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <h2>Add Discipline Grades</h2>

               @using (Html.BeginForm("studentList", "mst_discipline_grades", FormMethod.Get, new { id = "submit"}))
               {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                      
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.class_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.class_id, ViewData["class_id"] as IEnumerable<SelectListItem>, "Please Select Class", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.class_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.section_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownList("section_id", new SelectList(string.Empty, "section_id", "section_name"), "Select Section", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.section_id, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.term_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                               @Html.DropDownListFor(model => model.term_id, ViewData["term_id"] as IEnumerable<SelectListItem>, "Select Term", htmlAttributes: new { @class = "form-control" })


                                @Html.ValidationMessageFor(model => model.term_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.discipline_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownList("discipline_id", new SelectList(string.Empty, "co_scholastic_id", "co_scholastic_name"), "Select Co-Scholastic Area", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.discipline_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                     
                    
                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "btn btn-primary please_wait" })
                </div>
                </div>
</div>
</div>
</div>
@section Scripts {


    <script type="text/javascript">

        

                           $(document).ready(function () {

                                    //Dropdownlist Selectedchange event

                               $("#term_id").change(function () {

                                   $("#discipline_id").empty();
                                        $.ajax({

                                            type: 'POST',

                                            url: '@Url.Action("GetDiscipline")', dataType: 'json', data: { id: $("#class_id").val(), term_id: $("#term_id").val() }, success: function (discipline)
                                            {

                                                // states contains the JSON formatted list

                                                // of states passed from the controller



                                                $.each(discipline, function (i, discipline) {

                                                    $("#discipline_id").append('<option value="' + discipline.Value + '">' +

                                                     discipline.Text + '</option>');
                                                    
                                               
                                                // here we are adding option for States



                                                });

                                            },

                                            error: function (ex) {

                                                //alert('Failed to retrieve sections.' + ex);

                                            }

                                        });



                                        return false;

                               })


                               
                               $("#class_id").change(function () {

                                   $("#section_id").empty();
                                   $.ajax({

                                       type: 'POST',

                                       url: '@Url.Action("GetSection")', dataType: 'json', data: { id: $("#class_id").val() }, success: function (section) {

                                           // states contains the JSON formatted list

                                           // of states passed from the controller



                                           $.each(section, function (i, section) {

                                               $("#section_id").append('<option value="' + section.Value + '">' +

                                                section.Text + '</option>');


                                               // here we are adding option for States



                                           });

                                       },

                                       error: function (ex) {

                                           //alert('Failed to retrieve sections.' + ex);

                                       }

                                   });



                                   return false;

                               })

                           

                               return false;

                           })

    </script>
    }