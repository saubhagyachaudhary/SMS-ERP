@model SMS.Models.emp_detail

@{
    ViewBag.Title = "AddEmp";
}
<link href="~/vendors/datetimepicker/jquery-ui.css" rel="stylesheet" />
<div class="right_col" role="main">

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Add Employee</h2>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                           
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            

                            <div class="form-group">
                                @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.contact1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.contact1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.contact1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.contact2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.contact2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.contact2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.address1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.address2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.pincode, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.pincode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.dob, new { htmlAttributes = new { id = "dob", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.sex, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.education, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.education, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.doj, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.doj, new { htmlAttributes = new { id = "doj", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.doj, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.epf_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.epf_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.epf_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.aadhaar_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.aadhaar_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.aadhaar_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.bank_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.bank_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.bank_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.acc_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.acc_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.acc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ifsc_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.ifsc_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ifsc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.bank_branch, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.bank_branch, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.bank_branch, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.bioMatricNo, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.bioMatricNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.bioMatricNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "EmpList", new { area = "" }, new { @class = "btn btn-primary please_wait" })
                    </div>
                    </div>
</div>
</div>
</div>
</div>
@section Scripts {
<script src="~/vendors/datetimepicker/jquery-1.10.2.js"></script>
<script src="~/vendors/datetimepicker/jquery-ui.js"></script>
<script>
         $(function() {
             $("#dob").datepicker({
                 dateFormat: 'dd/mm/yy',
                 changeMonth: true,
                 changeYear: true
             });

         });

         $(function () {
             $("#doj").datepicker({
                 dateFormat: 'dd/mm/yy',
                 changeMonth: true,
                 changeYear: true,
                 yearRange: "2000:2999"
             });

         });
</script>
@Scripts.Render("~/bundles/jqueryval")
    }