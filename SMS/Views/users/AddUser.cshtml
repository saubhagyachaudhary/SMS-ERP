@model SMS.Models.users

@{
    ViewBag.Title = "AddUsers";

    List<SelectListItem> roles = new List<SelectListItem>();
    roles.Add(new SelectListItem
    {
        Value = "faculty",
        Text = "Faculty"
    });
    roles.Add(new SelectListItem
    {
        Value = "admin",
        Text = "Admin"
    });
    roles.Add(new SelectListItem
    {
        Value = "principal",
        Text = "Principal"
    });
    roles.Add(new SelectListItem
    {
        Value = "superadmin",
        Text = "Super Admin"
    });
}

<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <h2>Add User</h2>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                     
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.user_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.user_id, ViewData["user_id"] as IEnumerable<SelectListItem>, "Please Select Employee", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @disabled = "disable", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @disabled = "disable", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        
                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.roles, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.roles, roles as IEnumerable<SelectListItem>, htmlAttributes: new { id = "dob", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.roles, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      

                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "AllUsersList", new { area = "" }, new { @class = "btn btn-primary please_wait" })
                </div>
                </div>
            </div>
        </div>
    </div>


                @section Scripts {

<script type="text/javascript">

                           $(document).ready(function () {

                                    //Dropdownlist Selectedchange event

                               $("#user_id").change(function () {

                                   $("#FirstName").empty();
                                        $("#lastname").empty();
                                        $("#username").empty();
                                        $.ajax({

                                            type: 'POST',

                                            url: '@Url.Action("Getfirstname")', dataType: 'json', data: { id: $("#user_id").val() }, success: function (first_name)
                                            {

                                                $("#FirstName").val(first_name);

                                            },

                                        });

                                   $.ajax({

                                       type: 'POST',

                                       url: '@Url.Action("Getlastname")', dataType: 'json', data: { id: $("#user_id").val() }, success: function (last_name) {

                                           $("#lastname").val(last_name);

                                       },

                                   });

                                   $.ajax({

                                       type: 'POST',

                                       url: '@Url.Action("Getusername")', dataType: 'json', data: { id: $("#user_id").val() }, success: function (username) {

                                           $("#username").val(username);

                                       },

                                   });



                                        return false;

                               })

                             

                               return false;

                           })

</script>

                    @Scripts.Render("~/bundles/jqueryval")
                    
                   
                }
