@model SMS.Models.users

@{
    ViewBag.Title = "ProfileSetting";
}
<style>
    img{
        position: relative;
        left: 400px;
        
    }
</style>
<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <h2>Update Profile Picture</h2>

                @using (Html.BeginForm("ProfileSetting", "Profile",FormMethod.Post,new {enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                       
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.user_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.user_id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.HiddenFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.HiddenFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.HiddenFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.profilePicture, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                               <input type="file" name="profilePicture" />
                            </div>
                        </div>
                     

                        <div class="container">
                            @{
                                var filePath = "~/images/users/" + Request.Cookies["profilepicture"].Value.ToString(); // e.g., /Files/Images/hest.png
                                var absolutePath = System.Web.HttpContext.Current.Server.MapPath(filePath);

                                if (System.IO.File.Exists(absolutePath))
                                {

                                    <img src="~/images/users/@Request.Cookies["profilepicture"].Value.ToString()" class="img-circle" alt="Cinque Terre" width="100" height="100">
                                }
                                else
                                {
                                    <img src="~/images/default.jpg" class="img-circle" alt="Cinque Terre" width="100" height="100">
                                 
                                }
                            }

                        
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
