@model SMS.Models.mst_attendance

@{
    ViewBag.Title = "Assign_faculty";
}

<div class="right_col" role="main">
    <h2>Assign Faculty</h2>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.faculty_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.DropDownList("user_id", ViewData["user_id"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.faculty_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                          

                            <div class="form-group">
                                @Html.LabelFor(model => model.class_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.DropDownList("class_id", ViewData["class_id"] as IEnumerable<SelectListItem>,"Select class", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.class_id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.section_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.DropDownList("section_id", new SelectList(string.Empty, "section_id", "section_name"), "Select Section",htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.section_id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.finalizer_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.DropDownList("finalizer_user_id", ViewData["user_id"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.finalizer_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                           

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "list","", new { @class = "btn btn-primary please_wait" })
                    </div>
                    </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
<script type="text/javascript">

                           $(document).ready(function () {

                                    //Dropdownlist Selectedchange event

                               $("#class_id").change(function () {

                                        $("#section_id").empty();

                                        $.ajax({

                                            type: 'POST',

                                            url: '@Url.Action("GetSections")', dataType: 'json', data: { id: $("#class_id").val() }, success: function (sections)
                                            {

                                                // states contains the JSON formatted list

                                                // of states passed from the controller



                                                $.each(sections, function (i, sections) {

                                                $("#section_id").append('<option value="' + sections.Value + '">' +

                                                     sections.Text + '</option>');

                                                // here we are adding option for States



                                                });

                                            },

                                            error: function (ex) {

                                                //alert('Failed to retrieve sections.' + ex);

                                            }

                                        });



                                        return false;

                               })

                              

                               return false;

                           })

</script>
    }