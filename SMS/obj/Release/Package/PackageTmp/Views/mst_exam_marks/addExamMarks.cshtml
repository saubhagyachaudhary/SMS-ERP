@model SMS.Models.mst_exam_marks

@{
    ViewBag.Title = "addExamMarks";

}


<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <h2>Add Exam Marks</h2>

               @using (Html.BeginForm("studentList", "mst_exam_marks", FormMethod.Get, new { id = "submit"}))
               {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                      
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.class_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.class_id, ViewData["class_id"] as IEnumerable<SelectListItem>, "Please Select Class", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.class_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.section_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownList("section_id", new SelectList(string.Empty, "section_id", "section_name"), "Select Section", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.section_id, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.exam_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownList("exam_id", new SelectList(string.Empty, "exam_id", "exam_name"), "Select Exam", htmlAttributes: new { @class = "form-control" })


                                @Html.ValidationMessageFor(model => model.exam_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.subject_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownList("subject_id", new SelectList(string.Empty, "subject_id", "subject_name"), "Select Subject", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.subject_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.marks_assigned_user_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.marks_assigned_user_id, ViewData["marks_assigned_user_id"] as IEnumerable<SelectListItem>, "Please Select subject teacher", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.marks_assigned_user_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    
                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Assign Marks" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "btn btn-primary please_wait" })
                </div>
                </div>
</div>
</div>
</div>
@section Scripts {


    <script type="text/javascript">

        

                           $(document).ready(function () {

                                    //Dropdownlist Selectedchange event

                               $("#class_id").change(function () {

                                   $("#exam_id").empty();
                                   $("#exam_id").append('<option>Select Exam</option>');
                                        $.ajax({

                                            type: 'POST',

                                            url: '@Url.Action("GetExam")', dataType: 'json', data: { id: $("#class_id").val() }, success: function (exams)
                                            {

                                                // states contains the JSON formatted list

                                                // of states passed from the controller



                                                $.each(exams, function (i, exams) {

                                                    $("#exam_id").append('<option value="' + exams.Value + '">' +

                                                     exams.Text + '</option>');

                                               
                                                // here we are adding option for States



                                                });

                                            },

                                            error: function (ex) {

                                                //alert('Failed to retrieve sections.' + ex);

                                            }

                                        });



                                        return false;

                               })


                               $("#exam_id").change(function () {

                                   $("#subject_id").empty();
                                   $("#subject_id").append('<option value=0>Select Subject</option>');
                                   $.ajax({

                                       type: 'POST',

                                       url: '@Url.Action("GetSubject")', dataType: 'json', data: { exam_id: $("#exam_id").val(), class_id: $("#class_id").val(), section_id: $("#section_id").val() }, success: function (subject) {

                                           // states contains the JSON formatted list

                                           // of states passed from the controller



                                           $.each(subject, function (i, subject) {

                                               $("#subject_id").append('<option value="' + subject.Value + '">' +

                                                subject.Text + '</option>');


                                               // here we are adding option for States



                                           });

                                       },

                                       error: function (ex) {

                                           //alert('Failed to retrieve sections.' + ex);

                                       }

                                   });



                                   return false;

                               })

                               $("#class_id").change(function () {

                                   $("#section_id").empty();
                                   $.ajax({

                                       type: 'POST',

                                       url: '@Url.Action("GetSection")', dataType: 'json', data: { id: $("#class_id").val() }, success: function (section) {

                                           // states contains the JSON formatted list

                                           // of states passed from the controller



                                           $.each(section, function (i, section) {

                                               $("#section_id").append('<option value="' + section.Value + '">' +

                                                section.Text + '</option>');


                                               // here we are adding option for States



                                           });

                                       },

                                       error: function (ex) {

                                           //alert('Failed to retrieve sections.' + ex);

                                       }

                                   });



                                   return false;

                               })

                           

                               return false;

                           })

    </script>
    }