@model SMS.Models.repDues_Statement

@{
    ViewBag.Title = "duesListNotice";

    List<SelectListItem> operation = new List<SelectListItem>();
    operation.Add(new SelectListItem
    {
        Value = ">=",
        Text = "Greater Than Equal To"
    });


    operation.Add(new SelectListItem
    {
        Text = "Greater Than",
        Value = ">"
    });


    operation.Add(new SelectListItem
    {
        Text = "Equal To",
        Value = "="
    });

    List<SelectListItem> month = new List<SelectListItem>();
    month.Add(new SelectListItem
    {
        Value = "April",
        Text = "April"
    });
    month.Add(new SelectListItem
    {
        Value = "May",
        Text = "May"
    });
    month.Add(new SelectListItem
    {
        Value = "June",
        Text = "June"
    });
    month.Add(new SelectListItem
    {
        Value = "July",
        Text = "July"
    });
    month.Add(new SelectListItem
    {
        Value = "August",
        Text = "August"
    });
    month.Add(new SelectListItem
    {
        Value = "September",
        Text = "September"
    });
    month.Add(new SelectListItem
    {
        Value = "October",
        Text = "October"
    });
    month.Add(new SelectListItem
    {
        Value = "November",
        Text = "November"
    });
    month.Add(new SelectListItem
    {
        Value = "December",
        Text = "December"
    });
    month.Add(new SelectListItem
    {
        Value = "January",
        Text = "January"
    });
    month.Add(new SelectListItem
    {
        Value = "February",
        Text = "February"
    });
    month.Add(new SelectListItem
    {
        Value = "March",
        Text = "March"
    });
}

<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <h2>Generate/Send Fees Notice</h2>

                @using (Html.BeginForm("duesListNotice_students", "report", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.section_id, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.section_id, ViewData["class_id"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.section_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                            <div class="col-md-5 col-xs-6 col-sm-5">
                                @Html.DropDownListFor(model => model.operation, operation as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.operation, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 col-xs-6 col-sm-5">
                                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { required = "required", @placeholder = "Amount", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.month_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">
                                @Html.DropDownListFor(model => model.month_name, month as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.month_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Display" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

