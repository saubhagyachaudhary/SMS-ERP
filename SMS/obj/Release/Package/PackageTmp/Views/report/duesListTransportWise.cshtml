@model SMS.Models.reptransportList_DuesList

@{
    ViewBag.Title = "duesListTransportWise";

    List<SelectListItem> operation = new List<SelectListItem>();
    operation.Add(new SelectListItem
    {
        Value = ">=",
        Text = "Greater Than Equal To"
    });

    operation.Add(new SelectListItem
    {
        Value = "<=",
        Text = "Less Than Equal To"
    });


    operation.Add(new SelectListItem
    {
        Text = "Greater Than",
        Value = ">"
    });

    operation.Add(new SelectListItem
    {
        Text = "Less Than",
        Value = "<"
    });

    operation.Add(new SelectListItem
    {
        Text = "Equal To",
        Value = "="
    });
}
<link href="~/vendors/select2/dist/css/select2.min.css" rel="stylesheet" />
<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <h2>Download Dues List</h2>

                @using (Html.BeginForm("duesListTransportWise", "report", FormMethod.Post, new { target = "_blank" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.pickup_list, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-md-10 col-xs-12 col-sm-10">

                                <select class="form-control js-example-basic-multiple" name="pickup" multiple="multiple">

                                    <optgroup label="School Transport List">

                                        @{
                                            foreach (var item in Model.pickup_list)
                                            {

                                                <option value="@Html.DisplayFor(modelItem => item.pickup_id)">
                                                    @Html.DisplayFor(modelItem => item.pickup_point)
                                                </option>

                                            }

                                        }



                                    </optgroup>

                                </select>


                                @*@Html.DropDownListFor(model => model.pickup_id, ViewData["pickup_id"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.pickup_id, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                            <div class="col-md-5 col-xs-6 col-sm-5">
                                @Html.DropDownListFor(model => model.operation, operation as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.operation, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 col-xs-6 col-sm-5">
                                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { required = "required", @placeholder = "Amount", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })

                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                <input type="submit" value="Display" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/vendors/select2/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.js-example-basic-multiple').select2();
        });
    </script>
}
