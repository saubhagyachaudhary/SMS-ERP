@model SMS.Models.std_registration

@{
    ViewBag.Title = "EditRegistration";
}

<div class="right_col" role="main">
    <h2>Edit Registration</h2>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">

                    


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.session)

                            @Html.HiddenFor(model => model.reg_no)
                            @Html.HiddenFor(model => model.reg_date);
                            <div class="form-group">
                                @Html.LabelFor(model => model.session, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.session, new { htmlAttributes = new { @disabled = "disable", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.session, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.reg_no, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.reg_no, new { htmlAttributes = new { @disabled = "disable", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.reg_no, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.reg_date, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.reg_date, new { htmlAttributes = new { @disabled = "disable", @class = "form-control" } })
                                    
                                    @Html.ValidationMessageFor(model => model.reg_date, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_first_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_first_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_first_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_last_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_last_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_last_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_father_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_father_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_father_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_mother_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_mother_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_mother_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_address2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_district, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_district, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_district, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_state, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_state, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_state, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_country, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_pincode, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_pincode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact1, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_contact2, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_contact2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_contact2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.std_email, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                    @Html.EditorFor(model => model.std_email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.std_email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.class_name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                <div class="col-md-10 col-xs-12 col-sm-10">
                                   
                                    <select class="form-control" id="std_class_id" name="std_class_id">


                                        @foreach (var item in ViewData["class_id"] as IEnumerable<SelectListItem>)
                                        {
                                            if (item.Selected == true)
                                            {
                                                <option selected="selected" value=@Html.DisplayFor(modelItem => item.Value)>@Html.DisplayFor(modelItem => item.Text)</option>
                                            }
                                            else
                                            {
                                                <option value=@Html.DisplayFor(modelItem => item.Value)>@Html.DisplayFor(modelItem => item.Text)</option>
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.class_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10 col-sm-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    </div>

                </div>
            <div>
                @Html.ActionLink("Back to List", "AllRegistrationList", new { area = "" }, new { @class = "btn btn-primary please_wait" })
            </div>

            </div>
        </div>
    </div>

                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
